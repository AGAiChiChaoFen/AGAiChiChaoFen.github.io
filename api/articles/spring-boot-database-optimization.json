{"title":"Spring Boot 数据库优化实战","uid":"da282162e3762aeb9ca6ed290877c2e2","slug":"spring-boot-database-optimization","date":"2024-02-01T16:00:00.000Z","updated":"2024-02-01T16:00:00.000Z","comments":true,"path":"api/articles/spring-boot-database-optimization.json","keywords":null,"cover":"https://example.com/cover-images/spring-boot-database-optimization.png","content":"<h1 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h1><p>在现代Web应用中，数据库性能直接影响用户体验。Spring Boot 提供了许多工具和配置来优化数据库交互。本文将从数据库连接池、SQL调优、索引使用和缓存策略等多个方面深入探讨数据库优化的方法。</p>\n<h1 id=\"1-配置高效的数据库连接池\"><a href=\"#1-配置高效的数据库连接池\" class=\"headerlink\" title=\"1. 配置高效的数据库连接池\"></a>1. 配置高效的数据库连接池</h1><p>Spring Boot 默认使用 <strong>HikariCP</strong> 作为连接池，性能优异。可以通过配置文件进行优化。</p>\n<h2 id=\"1-1-HikariCP配置示例\"><a href=\"#1-1-HikariCP配置示例\" class=\"headerlink\" title=\"1.1 HikariCP配置示例\"></a>1.1 HikariCP配置示例</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306/your_database?useSSL=false&amp;serverTimezone=UTC</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">your_password</span></span><br><span class=\"line\">    <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\">    <span class=\"attr\">hikari:</span></span><br><span class=\"line\">      <span class=\"attr\">maximum-pool-size:</span> <span class=\"number\">20</span></span><br><span class=\"line\">      <span class=\"attr\">minimum-idle:</span> <span class=\"number\">5</span></span><br><span class=\"line\">      <span class=\"attr\">idle-timeout:</span> <span class=\"number\">30000</span></span><br><span class=\"line\">      <span class=\"attr\">connection-timeout:</span> <span class=\"number\">20000</span></span><br><span class=\"line\">      <span class=\"attr\">max-lifetime:</span> <span class=\"number\">1800000</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>maximum-pool-size</strong>: 设定连接池最大连接数，视系统并发需求调整。</li>\n<li><strong>idle-timeout</strong>: 控制空闲连接的超时时间，防止资源浪费。</li>\n</ul>\n<h1 id=\"2-SQL查询优化\"><a href=\"#2-SQL查询优化\" class=\"headerlink\" title=\"2. SQL查询优化\"></a>2. SQL查询优化</h1><h2 id=\"2-1-使用-Query进行自定义查询\"><a href=\"#2-1-使用-Query进行自定义查询\" class=\"headerlink\" title=\"2.1 使用@Query进行自定义查询\"></a>2.1 使用<code>@Query</code>进行自定义查询</h2><p>在复杂查询场景中，使用 JPQL 或原生 SQL 可提升查询效率。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Query(value = &quot;SELECT u FROM User u WHERE u.email = :email&quot;)</span></span><br><span class=\"line\">Optional&lt;User&gt; <span class=\"title function_\">findByEmail</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;email&quot;)</span> String email)</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-2-使用分页查询减少内存消耗\"><a href=\"#2-2-使用分页查询减少内存消耗\" class=\"headerlink\" title=\"2.2 使用分页查询减少内存消耗\"></a>2.2 使用分页查询减少内存消耗</h2><p>分页查询能有效降低大数据量查询对系统内存的占用。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Page&lt;User&gt; <span class=\"title function_\">findAll</span><span class=\"params\">(Pageable pageable)</span>;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-索引优化\"><a href=\"#3-索引优化\" class=\"headerlink\" title=\"3. 索引优化\"></a>3. 索引优化</h1><p>合理使用索引可以显著提升查询性能。以下是常见的索引优化建议：</p>\n<ul>\n<li><strong>为频繁查询的字段添加索引</strong>：如<code>WHERE</code>和<code>ORDER BY</code>中常用字段。</li>\n<li><strong>避免过多索引</strong>：过多索引会影响插入和更新性能。</li>\n</ul>\n<h3 id=\"示例：为email字段添加索引\"><a href=\"#示例：为email字段添加索引\" class=\"headerlink\" title=\"示例：为email字段添加索引\"></a>示例：为<code>email</code>字段添加索引</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER TABLE</span> users</span><br><span class=\"line\">    <span class=\"keyword\">ADD</span> INDEX idx_email (email);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-使用缓存减少数据库访问\"><a href=\"#4-使用缓存减少数据库访问\" class=\"headerlink\" title=\"4. 使用缓存减少数据库访问\"></a>4. 使用缓存减少数据库访问</h1><h2 id=\"4-1-集成-Redis-缓存\"><a href=\"#4-1-集成-Redis-缓存\" class=\"headerlink\" title=\"4.1 集成 Redis 缓存\"></a>4.1 集成 Redis 缓存</h2><p>Redis 是高效的缓存工具，可以减少频繁的数据库访问。</p>\n<h3 id=\"引入依赖\"><a href=\"#引入依赖\" class=\"headerlink\" title=\"引入依赖\"></a>引入依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置-Redis\"><a href=\"#配置-Redis\" class=\"headerlink\" title=\"配置 Redis\"></a>配置 Redis</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">redis:</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">6379</span></span><br><span class=\"line\">    <span class=\"attr\">timeout:</span> <span class=\"number\">5000</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用缓存注解\"><a href=\"#使用缓存注解\" class=\"headerlink\" title=\"使用缓存注解\"></a>使用缓存注解</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Cacheable(value = &quot;users&quot;, key = &quot;#id&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> User <span class=\"title function_\">findUserById</span><span class=\"params\">(Long id)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> userRepository.findById(id).orElse(<span class=\"literal\">null</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"5-性能监控与调优\"><a href=\"#5-性能监控与调优\" class=\"headerlink\" title=\"5. 性能监控与调优\"></a>5. 性能监控与调优</h1><p>定期使用性能监控工具（如 <strong>Spring Boot Actuator</strong> 和 <strong>MySQL Performance Schema</strong>）监控应用运行状态，发现性能瓶颈。</p>\n<h3 id=\"引入-Actuator-依赖\"><a href=\"#引入-Actuator-依赖\" class=\"headerlink\" title=\"引入 Actuator 依赖\"></a>引入 Actuator 依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启用-Actuator-端点\"><a href=\"#启用-Actuator-端点\" class=\"headerlink\" title=\"启用 Actuator 端点\"></a>启用 Actuator 端点</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">management:</span></span><br><span class=\"line\">  <span class=\"attr\">endpoints:</span></span><br><span class=\"line\">    <span class=\"attr\">web:</span></span><br><span class=\"line\">      <span class=\"attr\">exposure:</span></span><br><span class=\"line\">        <span class=\"attr\">include:</span> <span class=\"string\">&quot;*&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>通过 <code>/actuator/metrics</code> 端点可获取数据库连接池、查询耗时等详细指标。</p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>数据库优化是提升应用性能的关键步骤。通过合理配置连接池、优化 SQL 语句、使用索引和缓存，开发者可以大幅度提升 Spring Boot<br>应用的数据库交互效率。持续的性能监控和调优，将帮助系统保持最佳性能状态。</p>\n","feature":true,"text":"本文系统讲解了如何在Spring Boot应用中优化数据库性能，包括连接池配置、SQL调优、索引使用和缓存策略等，助力开发者提升系统响应速度与稳定性。...","permalink":"/post/spring-boot-database-optimization","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"后端开发","slug":"后端开发","count":14,"path":"api/categories/后端开发.json"},{"name":"数据库优化","slug":"后端开发/数据库优化","count":1,"path":"api/categories/后端开发/数据库优化.json"}],"tags":[{"name":"Spring Boot","slug":"Spring-Boot","count":11,"path":"api/tags/Spring-Boot.json"},{"name":"数据库优化","slug":"数据库优化","count":3,"path":"api/tags/数据库优化.json"},{"name":"MySQL","slug":"MySQL","count":1,"path":"api/tags/MySQL.json"},{"name":"HikariCP","slug":"HikariCP","count":1,"path":"api/tags/HikariCP.json"},{"name":"SQL调优","slug":"SQL调优","count":1,"path":"api/tags/SQL调优.json"},{"name":"缓存策略","slug":"缓存策略","count":5,"path":"api/tags/缓存策略.json"},{"name":"性能调优","slug":"性能调优","count":2,"path":"api/tags/性能调优.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BC%95%E8%A8%80\"><span class=\"toc-text\">引言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E9%85%8D%E7%BD%AE%E9%AB%98%E6%95%88%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0\"><span class=\"toc-text\">1. 配置高效的数据库连接池</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-HikariCP%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">1.1 HikariCP配置示例</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-SQL%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">2. SQL查询优化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E4%BD%BF%E7%94%A8-Query%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">2.1 使用@Query进行自定义查询</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E4%BD%BF%E7%94%A8%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E5%87%8F%E5%B0%91%E5%86%85%E5%AD%98%E6%B6%88%E8%80%97\"><span class=\"toc-text\">2.2 使用分页查询减少内存消耗</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">3. 索引优化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B%EF%BC%9A%E4%B8%BAemail%E5%AD%97%E6%AE%B5%E6%B7%BB%E5%8A%A0%E7%B4%A2%E5%BC%95\"><span class=\"toc-text\">示例：为email字段添加索引</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E4%BD%BF%E7%94%A8%E7%BC%93%E5%AD%98%E5%87%8F%E5%B0%91%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BF%E9%97%AE\"><span class=\"toc-text\">4. 使用缓存减少数据库访问</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-%E9%9B%86%E6%88%90-Redis-%E7%BC%93%E5%AD%98\"><span class=\"toc-text\">4.1 集成 Redis 缓存</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%95%E5%85%A5%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">引入依赖</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE-Redis\"><span class=\"toc-text\">配置 Redis</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E7%BC%93%E5%AD%98%E6%B3%A8%E8%A7%A3\"><span class=\"toc-text\">使用缓存注解</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E4%B8%8E%E8%B0%83%E4%BC%98\"><span class=\"toc-text\">5. 性能监控与调优</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%95%E5%85%A5-Actuator-%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">引入 Actuator 依赖</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AF%E7%94%A8-Actuator-%E7%AB%AF%E7%82%B9\"><span class=\"toc-text\">启用 Actuator 端点</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AF%AD\"><span class=\"toc-text\">结语</span></a></li></ol>","author":{"name":"广","slug":"blog-author","avatar":"https://sky-take-out-agaichichaofen.oss-cn-wuhan-lr.aliyuncs.com/qq%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"啊广的读书交流自习室","socials":{"github":"https://github.com/AGAiChiChaoFen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://www.weibo.com/u/5348126242","zhihu":"https://www.zhihu.com/people/wei-xin-yong-hu-92-31-83-82","csdn":"https://blog.csdn.net/m0_74151385?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/501025927?spm_id_from=333.1007.0.0"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Spring Boot 异步处理优化技巧","uid":"5ee088f3a4e8f24a265d688274214f82","slug":"spring-boot-async-processing","date":"2024-02-01T16:00:00.000Z","updated":"2024-02-01T16:00:00.000Z","comments":true,"path":"api/articles/spring-boot-async-processing.json","keywords":null,"cover":"https://example.com/cover-images/spring-boot-async.png","text":"本文详细介绍了如何在 Spring Boot 中实现异步处理，分析了常见的异步处理策略，并给出了性能优化和最佳实践，帮助开发者提升系统响应速度和并发处理能力。...","permalink":"/post/spring-boot-async-processing","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"后端开发","slug":"后端开发","count":14,"path":"api/categories/后端开发.json"},{"name":"性能优化","slug":"后端开发/性能优化","count":6,"path":"api/categories/后端开发/性能优化.json"}],"tags":[{"name":"Spring Boot","slug":"Spring-Boot","count":11,"path":"api/tags/Spring-Boot.json"},{"name":"性能优化","slug":"性能优化","count":7,"path":"api/tags/性能优化.json"},{"name":"异步处理","slug":"异步处理","count":3,"path":"api/tags/异步处理.json"},{"name":"并发编程","slug":"并发编程","count":1,"path":"api/tags/并发编程.json"},{"name":"线程池","slug":"线程池","count":1,"path":"api/tags/线程池.json"}],"author":{"name":"广","slug":"blog-author","avatar":"https://sky-take-out-agaichichaofen.oss-cn-wuhan-lr.aliyuncs.com/qq%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"啊广的读书交流自习室","socials":{"github":"https://github.com/AGAiChiChaoFen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://www.weibo.com/u/5348126242","zhihu":"https://www.zhihu.com/people/wei-xin-yong-hu-92-31-83-82","csdn":"https://blog.csdn.net/m0_74151385?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/501025927?spm_id_from=333.1007.0.0"}}}},"feature":true},"next_post":{"title":"提升性能的秘密武器：Spring Boot 缓存策略详解","uid":"a9e4ea48549354f20459e1e2acd73599","slug":"spring-boot-caching-strategies","date":"2024-02-01T16:00:00.000Z","updated":"2024-02-01T16:00:00.000Z","comments":true,"path":"api/articles/spring-boot-caching-strategies.json","keywords":null,"cover":"https://example.com/cover-images/spring-boot-caching.png","text":"本文深入探讨了 Spring Boot 中的缓存机制，详细讲解了缓存的基本原理、常用缓存工具（如 Redis 和 Caffeine）的集成与配置，以及不同业务场景下的缓存策略优化方法。...","permalink":"/post/spring-boot-caching-strategies","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"后端开发","slug":"后端开发","count":14,"path":"api/categories/后端开发.json"},{"name":"性能优化","slug":"后端开发/性能优化","count":6,"path":"api/categories/后端开发/性能优化.json"}],"tags":[{"name":"Spring Boot","slug":"Spring-Boot","count":11,"path":"api/tags/Spring-Boot.json"},{"name":"性能优化","slug":"性能优化","count":7,"path":"api/tags/性能优化.json"},{"name":"缓存策略","slug":"缓存策略","count":5,"path":"api/tags/缓存策略.json"},{"name":"Redis","slug":"Redis","count":2,"path":"api/tags/Redis.json"},{"name":"Caffeine","slug":"Caffeine","count":1,"path":"api/tags/Caffeine.json"},{"name":"数据一致性","slug":"数据一致性","count":1,"path":"api/tags/数据一致性.json"}],"author":{"name":"广","slug":"blog-author","avatar":"https://sky-take-out-agaichichaofen.oss-cn-wuhan-lr.aliyuncs.com/qq%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"啊广的读书交流自习室","socials":{"github":"https://github.com/AGAiChiChaoFen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://www.weibo.com/u/5348126242","zhihu":"https://www.zhihu.com/people/wei-xin-yong-hu-92-31-83-82","csdn":"https://blog.csdn.net/m0_74151385?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/501025927?spm_id_from=333.1007.0.0"}}}},"feature":true}}