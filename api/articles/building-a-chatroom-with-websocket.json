{"title":"如何搭建一个简单的聊天室（基于 WebSocket）","uid":"b0b196b8cb2c43915438318c4df4a70f","slug":"building-a-chatroom-with-websocket","date":"2024-02-01T16:00:00.000Z","updated":"2024-02-01T16:00:00.000Z","comments":true,"path":"api/articles/building-a-chatroom-with-websocket.json","keywords":null,"cover":"https://example.com/cover-images/chatroom.png","content":"<h1 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h1><p>聊天室是许多在线应用中的重要组成部分，尤其是在社交平台、在线客服、团队协作等场景中。传统的 HTTP<br>协议虽然能实现基本的通信，但无法满足实时互动的需求。WebSocket<br>协议作为一种全双工通信协议，提供了一个持久的、低延迟的连接方式，非常适合用于实时聊天应用。本文将带你搭建一个简单的聊天室，教你如何利用<br>WebSocket 构建客户端和服务器端，实现在浏览器中进行实时消息交流。</p>\n<h1 id=\"1-项目概览\"><a href=\"#1-项目概览\" class=\"headerlink\" title=\"1. 项目概览\"></a>1. 项目概览</h1><p>我们将使用以下技术栈搭建聊天室：</p>\n<ul>\n<li><strong>服务器端</strong>：Node.js + WebSocket</li>\n<li><strong>客户端</strong>：HTML + JavaScript</li>\n</ul>\n<p>项目将实现以下基本功能：</p>\n<ul>\n<li>客户端可以发送消息到服务器。</li>\n<li>服务器将消息广播给所有连接的客户端，实现多人聊天。</li>\n<li>用户可以在不同的浏览器窗口中进行实时消息互动。</li>\n</ul>\n<h1 id=\"2-搭建-WebSocket-服务器\"><a href=\"#2-搭建-WebSocket-服务器\" class=\"headerlink\" title=\"2. 搭建 WebSocket 服务器\"></a>2. 搭建 WebSocket 服务器</h1><p>首先，我们需要创建一个简单的 WebSocket 服务器。我们使用 Node.js 和 <code>ws</code> 库来搭建这个服务器。</p>\n<h2 id=\"2-1-安装-Node-js-和-ws-库\"><a href=\"#2-1-安装-Node-js-和-ws-库\" class=\"headerlink\" title=\"2.1 安装 Node.js 和 ws 库\"></a>2.1 安装 Node.js 和 <code>ws</code> 库</h2><p>确保你已经安装了 Node.js。在项目目录中初始化一个 Node.js 项目：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init -y</span><br></pre></td></tr></table></figure>\n\n<p>然后，安装 <code>ws</code> 库，它是一个流行的 WebSocket 库：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install ws</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-2-创建-WebSocket-服务器\"><a href=\"#2-2-创建-WebSocket-服务器\" class=\"headerlink\" title=\"2.2 创建 WebSocket 服务器\"></a>2.2 创建 WebSocket 服务器</h2><p>在项目根目录下创建一个名为 <code>server.js</code> 的文件，并加入以下内容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">WebSocket</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;ws&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> wss = <span class=\"keyword\">new</span> <span class=\"title class_\">WebSocket</span>.<span class=\"title class_\">Server</span>(&#123;<span class=\"attr\">port</span>: <span class=\"number\">8080</span>&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 监听客户端连接</span></span><br><span class=\"line\">wss.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;connection&#x27;</span>, <span class=\"function\">(<span class=\"params\">ws</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;A new client connected&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 监听客户端消息</span></span><br><span class=\"line\">    ws.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;message&#x27;</span>, <span class=\"function\">(<span class=\"params\">message</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Received:&#x27;</span>, message);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 将接收到的消息广播给所有客户端</span></span><br><span class=\"line\">        wss.<span class=\"property\">clients</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">client</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (client !== ws &amp;&amp; client.<span class=\"property\">readyState</span> === <span class=\"title class_\">WebSocket</span>.<span class=\"property\">OPEN</span>) &#123;</span><br><span class=\"line\">                client.<span class=\"title function_\">send</span>(message);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 监听客户端关闭</span></span><br><span class=\"line\">    ws.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;close&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;A client disconnected&#x27;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;WebSocket server started on ws://localhost:8080&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>这里我们创建了一个 WebSocket 服务器，监听客户端连接。当服务器接收到一个客户端的消息时，它会将该消息广播给所有其他连接的客户端。</p>\n<h1 id=\"3-创建客户端界面\"><a href=\"#3-创建客户端界面\" class=\"headerlink\" title=\"3. 创建客户端界面\"></a>3. 创建客户端界面</h1><p>接下来，我们需要创建一个简单的前端界面，允许用户发送和接收消息。我们将使用纯 HTML 和 JavaScript 实现。</p>\n<h2 id=\"3-1-创建-HTML-页面\"><a href=\"#3-1-创建-HTML-页面\" class=\"headerlink\" title=\"3.1 创建 HTML 页面\"></a>3.1 创建 HTML 页面</h2><p>在项目根目录下创建一个名为 <code>index.html</code> 的文件，加入以下内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>聊天室<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-family</span>: Arial, sans-serif;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#chat</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">max-height</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">overflow-y</span>: scroll;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#message</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">80%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#send</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>简单聊天室<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;chat&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;message&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;输入消息&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;send&quot;</span>&gt;</span>发送<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 连接到 WebSocket 服务器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> socket = <span class=\"keyword\">new</span> <span class=\"title class_\">WebSocket</span>(<span class=\"string\">&#x27;ws://localhost:8080&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 获取页面元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> chat = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;chat&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> messageInput = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;message&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> sendButton = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;send&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 监听 WebSocket 消息</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    socket.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">const</span> message = event.<span class=\"property\">data</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">const</span> messageElement = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;p&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        messageElement.<span class=\"property\">textContent</span> = message;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        chat.<span class=\"title function_\">appendChild</span>(messageElement);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        chat.<span class=\"property\">scrollTop</span> = chat.<span class=\"property\">scrollHeight</span>;  <span class=\"comment\">// 滚动到最新消息</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 监听发送按钮点击</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    sendButton.<span class=\"property\">onclick</span> = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">const</span> message = messageInput.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (message) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            socket.<span class=\"title function_\">send</span>(message);  <span class=\"comment\">// 发送消息到服务器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            messageInput.<span class=\"property\">value</span> = <span class=\"string\">&#x27;&#x27;</span>;  <span class=\"comment\">// 清空输入框</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这个 HTML 页面包含了一个简单的聊天室界面，包括消息显示区域、消息输入框和发送按钮。JavaScript 部分负责处理与 WebSocket<br>服务器的连接和消息发送、接收。</p>\n<h2 id=\"3-2-运行客户端\"><a href=\"#3-2-运行客户端\" class=\"headerlink\" title=\"3.2 运行客户端\"></a>3.2 运行客户端</h2><p>只需将 <code>index.html</code> 文件用浏览器打开，打开多个浏览器窗口或标签页，就能看到聊天室效果。当在其中一个窗口发送消息时，其他窗口也会即时收到消息。</p>\n<h1 id=\"4-测试聊天室\"><a href=\"#4-测试聊天室\" class=\"headerlink\" title=\"4. 测试聊天室\"></a>4. 测试聊天室</h1><ol>\n<li><p>运行 WebSocket 服务器：在项目目录下运行以下命令启动服务器：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node server.js</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开浏览器并访问 <code>index.html</code> 文件，可以同时打开多个浏览器窗口或标签页，开始发送和接收实时消息。</p>\n</li>\n</ol>\n<h1 id=\"5-扩展功能\"><a href=\"#5-扩展功能\" class=\"headerlink\" title=\"5. 扩展功能\"></a>5. 扩展功能</h1><p>现在，我们已经搭建了一个基本的聊天室，接下来可以根据需要扩展更多功能：</p>\n<ul>\n<li><strong>用户名功能</strong>：为每个客户端添加用户名，让发送的消息显示用户名。</li>\n<li><strong>消息类型</strong>：支持文本、图片、表情等多种消息类型。</li>\n<li><strong>消息存储</strong>：将聊天记录保存在数据库中，用户下次进入聊天室时可以查看历史消息。</li>\n<li><strong>私聊功能</strong>：实现用户之间的私聊功能，消息只会发送到指定的用户。</li>\n</ul>\n<h1 id=\"6-总结\"><a href=\"#6-总结\" class=\"headerlink\" title=\"6. 总结\"></a>6. 总结</h1><p>通过本文的指导，我们成功搭建了一个简单的 WebSocket 聊天室。通过 WebSocket<br>协议，客户端和服务器之间可以实现实时的双向通信，非常适合即时通讯类应用。在这个基础上，你可以进一步扩展和优化聊天室功能，打造一个更完整的在线实时沟通平台。</p>\n","feature":true,"text":"本文将通过一步步的指导，教你如何使用 WebSocket 技术搭建一个简单的聊天室应用，包括客户端和服务器端的实现。...","permalink":"/post/building-a-chatroom-with-websocket","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"后端开发","slug":"后端开发","count":14,"path":"api/categories/后端开发.json"},{"name":"实时通信","slug":"后端开发/实时通信","count":2,"path":"api/categories/后端开发/实时通信.json"}],"tags":[{"name":"WebSocket","slug":"WebSocket","count":3,"path":"api/tags/WebSocket.json"},{"name":"聊天室","slug":"聊天室","count":1,"path":"api/tags/聊天室.json"},{"name":"实时通信","slug":"实时通信","count":3,"path":"api/tags/实时通信.json"},{"name":"Node.js","slug":"Node-js","count":1,"path":"api/tags/Node-js.json"},{"name":"JavaScript","slug":"JavaScript","count":1,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BC%95%E8%A8%80\"><span class=\"toc-text\">引言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%A7%88\"><span class=\"toc-text\">1. 项目概览</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E6%90%AD%E5%BB%BA-WebSocket-%E6%9C%8D%E5%8A%A1%E5%99%A8\"><span class=\"toc-text\">2. 搭建 WebSocket 服务器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E5%AE%89%E8%A3%85-Node-js-%E5%92%8C-ws-%E5%BA%93\"><span class=\"toc-text\">2.1 安装 Node.js 和 ws 库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E5%88%9B%E5%BB%BA-WebSocket-%E6%9C%8D%E5%8A%A1%E5%99%A8\"><span class=\"toc-text\">2.2 创建 WebSocket 服务器</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E5%88%9B%E5%BB%BA%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%95%8C%E9%9D%A2\"><span class=\"toc-text\">3. 创建客户端界面</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E5%88%9B%E5%BB%BA-HTML-%E9%A1%B5%E9%9D%A2\"><span class=\"toc-text\">3.1 创建 HTML 页面</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-%E8%BF%90%E8%A1%8C%E5%AE%A2%E6%88%B7%E7%AB%AF\"><span class=\"toc-text\">3.2 运行客户端</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E6%B5%8B%E8%AF%95%E8%81%8A%E5%A4%A9%E5%AE%A4\"><span class=\"toc-text\">4. 测试聊天室</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E6%89%A9%E5%B1%95%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">5. 扩展功能</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">6. 总结</span></a></li></ol>","author":{"name":"广","slug":"blog-author","avatar":"https://sky-take-out-agaichichaofen.oss-cn-wuhan-lr.aliyuncs.com/qq%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"啊广的读书交流自习室","socials":{"github":"https://github.com/AGAiChiChaoFen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://www.weibo.com/u/5348126242","zhihu":"https://www.zhihu.com/people/wei-xin-yong-hu-92-31-83-82","csdn":"https://blog.csdn.net/m0_74151385?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/501025927?spm_id_from=333.1007.0.0"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"深入讲解 Java Map 的实现原理","uid":"e53806ef11a043e56d7ec2f23b4d7254","slug":"deep-dive-into-map-implementation-in-java","date":"2024-02-01T16:00:00.000Z","updated":"2024-02-01T16:00:00.000Z","comments":true,"path":"api/articles/deep-dive-into-map-implementation-in-java.json","keywords":null,"cover":"https://example.com/cover-images/map-implementation.png","text":"本文深入讲解 Java 中 `Map` 接口的实现原理，重点分析 `HashMap`、`TreeMap`、`LinkedHashMap` 等常见实现，探索它们的工作机制、性能特点及优化策略。...","permalink":"/post/deep-dive-into-map-implementation-in-java","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"后端开发","slug":"后端开发","count":14,"path":"api/categories/后端开发.json"},{"name":"数据结构","slug":"后端开发/数据结构","count":1,"path":"api/categories/后端开发/数据结构.json"}],"tags":[{"name":"Java","slug":"Java","count":6,"path":"api/tags/Java.json"},{"name":"Map","slug":"Map","count":2,"path":"api/tags/Map.json"},{"name":"HashMap","slug":"HashMap","count":1,"path":"api/tags/HashMap.json"},{"name":"数据结构","slug":"数据结构","count":2,"path":"api/tags/数据结构.json"},{"name":"集合框架","slug":"集合框架","count":2,"path":"api/tags/集合框架.json"}],"author":{"name":"广","slug":"blog-author","avatar":"https://sky-take-out-agaichichaofen.oss-cn-wuhan-lr.aliyuncs.com/qq%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"啊广的读书交流自习室","socials":{"github":"https://github.com/AGAiChiChaoFen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://www.weibo.com/u/5348126242","zhihu":"https://www.zhihu.com/people/wei-xin-yong-hu-92-31-83-82","csdn":"https://blog.csdn.net/m0_74151385?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/501025927?spm_id_from=333.1007.0.0"}}}},"feature":true},"next_post":{"title":"如何使用 Spring Cloud Alibaba 搭建 Spring Cloud 项目","uid":"e80c035b430b9e13f522357568773bcc","slug":"how-to-setup-spring-cloud-using-spring-cloud-alibaba","date":"2024-02-01T16:00:00.000Z","updated":"2024-02-01T16:00:00.000Z","comments":true,"path":"api/articles/how-to-setup-spring-cloud-using-spring-cloud-alibaba.json","keywords":null,"cover":"https://example.com/cover-images/spring-cloud-alibaba.png","text":"本文将详细介绍如何使用 Spring Cloud Alibaba 搭建一个分布式微服务架构，涵盖了服务注册与发现、配置管理、负载均衡、服务网关等常见功能。...","permalink":"/post/how-to-setup-spring-cloud-using-spring-cloud-alibaba","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"后端开发","slug":"后端开发","count":14,"path":"api/categories/后端开发.json"},{"name":"Spring Cloud","slug":"后端开发/Spring-Cloud","count":1,"path":"api/categories/后端开发/Spring-Cloud.json"},{"name":"微服务","slug":"后端开发/Spring-Cloud/微服务","count":1,"path":"api/categories/后端开发/Spring-Cloud/微服务.json"}],"tags":[{"name":"负载均衡","slug":"负载均衡","count":2,"path":"api/tags/负载均衡.json"},{"name":"Spring Cloud","slug":"Spring-Cloud","count":1,"path":"api/tags/Spring-Cloud.json"},{"name":"Spring Cloud Alibaba","slug":"Spring-Cloud-Alibaba","count":1,"path":"api/tags/Spring-Cloud-Alibaba.json"},{"name":"微服务","slug":"微服务","count":1,"path":"api/tags/微服务.json"},{"name":"服务注册与发现","slug":"服务注册与发现","count":1,"path":"api/tags/服务注册与发现.json"},{"name":"Nacos","slug":"Nacos","count":1,"path":"api/tags/Nacos.json"}],"author":{"name":"广","slug":"blog-author","avatar":"https://sky-take-out-agaichichaofen.oss-cn-wuhan-lr.aliyuncs.com/qq%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"啊广的读书交流自习室","socials":{"github":"https://github.com/AGAiChiChaoFen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://www.weibo.com/u/5348126242","zhihu":"https://www.zhihu.com/people/wei-xin-yong-hu-92-31-83-82","csdn":"https://blog.csdn.net/m0_74151385?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/501025927?spm_id_from=333.1007.0.0"}}}},"feature":true}}