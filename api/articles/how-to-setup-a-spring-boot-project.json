{"title":"如何搭建一个 Spring Boot 项目","uid":"b5681646b03eac4279aa5143cd48c99a","slug":"how-to-setup-a-spring-boot-project","date":"2024-02-01T16:00:00.000Z","updated":"2024-02-01T16:00:00.000Z","comments":true,"path":"api/articles/how-to-setup-a-spring-boot-project.json","keywords":null,"cover":"https://example.com/cover-images/spring-boot-setup.png","content":"<h1 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h1><p>Spring Boot 是一个开源框架，旨在简化 Spring 应用的创建过程。它减少了大量的配置工作，并通过内嵌的 Web 服务器（如<br>Tomcat、Jetty）让开发者更专注于业务逻辑的实现。在本文中，我们将介绍如何从零开始搭建一个 Spring Boot<br>项目，包括环境配置、创建项目、编写代码和运行项目等步骤。</p>\n<h1 id=\"1-环境准备\"><a href=\"#1-环境准备\" class=\"headerlink\" title=\"1. 环境准备\"></a>1. 环境准备</h1><p>在搭建 Spring Boot 项目之前，需要确保以下环境配置已完成：</p>\n<h2 id=\"1-1-安装-JDK\"><a href=\"#1-1-安装-JDK\" class=\"headerlink\" title=\"1.1 安装 JDK\"></a>1.1 安装 JDK</h2><p>Spring Boot 项目需要 JDK 11 或更高版本。在官网 <a href=\"https://adoptopenjdk.net/\">OpenJDK</a> 下载并安装 JDK。</p>\n<p>安装后，可以通过以下命令确认 JDK 是否正确安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-2-安装-Maven\"><a href=\"#1-2-安装-Maven\" class=\"headerlink\" title=\"1.2 安装 Maven\"></a>1.2 安装 Maven</h2><p>Spring Boot 项目通常使用 Maven 作为构建工具。如果你还没有安装<br>Maven，可以参考之前的博客 <a href=\"./configure-maven-environment.md\">如何配置 Maven 环境</a> 进行配置。</p>\n<p>安装后，通过以下命令验证 Maven 是否正确安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn -version</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-3-安装-IDE\"><a href=\"#1-3-安装-IDE\" class=\"headerlink\" title=\"1.3 安装 IDE\"></a>1.3 安装 IDE</h2><p>我们推荐使用 IntelliJ IDEA 或 Spring Tool Suite (STS) 来开发 Spring Boot 项目。这些 IDE 提供了丰富的 Spring 支持，简化了开发过程。</p>\n<h1 id=\"2-创建-Spring-Boot-项目\"><a href=\"#2-创建-Spring-Boot-项目\" class=\"headerlink\" title=\"2. 创建 Spring Boot 项目\"></a>2. 创建 Spring Boot 项目</h1><h2 id=\"2-1-使用-Spring-Initializr-创建项目\"><a href=\"#2-1-使用-Spring-Initializr-创建项目\" class=\"headerlink\" title=\"2.1 使用 Spring Initializr 创建项目\"></a>2.1 使用 Spring Initializr 创建项目</h2><p>Spring 提供了一个在线工具 <a href=\"https://start.spring.io/\">Spring Initializr</a>，可以快速生成 Spring Boot 项目模板。</p>\n<ol>\n<li>访问 <a href=\"https://start.spring.io/\">Spring Initializr</a>。</li>\n<li>选择以下选项：<ul>\n<li><strong>Project</strong>: Maven Project</li>\n<li><strong>Language</strong>: Java</li>\n<li><strong>Spring Boot</strong>: 选择稳定的版本，例如 2.7.x</li>\n<li><strong>Group</strong>: com.example</li>\n<li><strong>Artifact</strong>: springboot-demo</li>\n<li><strong>Name</strong>: springboot-demo</li>\n<li><strong>Description</strong>: 一个简单的 Spring Boot 项目</li>\n<li><strong>Package Name</strong>: com.example.springbootdemo</li>\n<li><strong>Packaging</strong>: Jar</li>\n<li><strong>Java Version</strong>: 11</li>\n</ul>\n</li>\n<li>在 <strong>Dependencies</strong> 栏中，选择 <code>Spring Web</code> 和 <code>Spring Boot DevTools</code>（方便开发时热部署）。</li>\n<li>点击 <strong>Generate</strong> 下载项目。</li>\n</ol>\n<h2 id=\"2-2-导入项目\"><a href=\"#2-2-导入项目\" class=\"headerlink\" title=\"2.2 导入项目\"></a>2.2 导入项目</h2><p>将下载的项目解压，并用你喜欢的 IDE 打开。</p>\n<ul>\n<li><strong>IntelliJ IDEA</strong>：选择 <code>Open</code>，然后选择项目目录。</li>\n<li><strong>STS</strong>：选择 <code>File</code> &gt; <code>Import</code>，然后选择 Maven 项目并导入。</li>\n</ul>\n<h1 id=\"3-编写代码\"><a href=\"#3-编写代码\" class=\"headerlink\" title=\"3. 编写代码\"></a>3. 编写代码</h1><h2 id=\"3-1-创建-Controller\"><a href=\"#3-1-创建-Controller\" class=\"headerlink\" title=\"3.1 创建 Controller\"></a>3.1 创建 Controller</h2><p>在 <code>src/main/java/com/example/springbootdemo</code> 目录下，创建一个简单的控制器 <code>HelloController.java</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.springbootdemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello, Spring Boot!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个简单的 <code>Controller</code> 会响应 GET 请求并返回一个字符串。</p>\n<h2 id=\"3-2-配置类\"><a href=\"#3-2-配置类\" class=\"headerlink\" title=\"3.2 配置类\"></a>3.2 配置类</h2><p><code>SpringBootDemoApplication.java</code> 是 Spring Boot 项目的入口类，它包含了 <code>main</code> 方法并启动 Spring Boot 应用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.springbootdemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringbootDemoApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(SpringbootDemoApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>@SpringBootApplication</code> 是一个复合注解，包含了 <code>@Configuration</code>、<code>@EnableAutoConfiguration</code> 和 <code>@ComponentScan</code>。</p>\n<h1 id=\"4-运行项目\"><a href=\"#4-运行项目\" class=\"headerlink\" title=\"4. 运行项目\"></a>4. 运行项目</h1><h2 id=\"4-1-使用-IDE-运行\"><a href=\"#4-1-使用-IDE-运行\" class=\"headerlink\" title=\"4.1 使用 IDE 运行\"></a>4.1 使用 IDE 运行</h2><p>在 IDE 中，你可以直接运行 <code>SpringbootDemoApplication.java</code> 类中的 <code>main</code> 方法来启动 Spring Boot 项目。</p>\n<h2 id=\"4-2-使用命令行运行\"><a href=\"#4-2-使用命令行运行\" class=\"headerlink\" title=\"4.2 使用命令行运行\"></a>4.2 使用命令行运行</h2><p>你也可以通过命令行启动项目。在项目根目录下，使用以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn spring-boot:run</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-3-访问项目\"><a href=\"#4-3-访问项目\" class=\"headerlink\" title=\"4.3 访问项目\"></a>4.3 访问项目</h2><p>打开浏览器，访问 <code>http://localhost:8080/hello</code>，你将看到返回的 <code>Hello, Spring Boot!</code> 字符串。</p>\n<h1 id=\"5-项目打包和部署\"><a href=\"#5-项目打包和部署\" class=\"headerlink\" title=\"5. 项目打包和部署\"></a>5. 项目打包和部署</h1><h2 id=\"5-1-打包项目\"><a href=\"#5-1-打包项目\" class=\"headerlink\" title=\"5.1 打包项目\"></a>5.1 打包项目</h2><p>通过 Maven，你可以将项目打包成一个可执行的 JAR 文件。在项目根目录下执行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean package</span><br></pre></td></tr></table></figure>\n\n<p>构建完成后，在 <code>target</code> 目录下将生成一个 <code>springboot-demo-0.0.1-SNAPSHOT.jar</code> 文件。</p>\n<h2 id=\"5-2-运行打包后的-JAR-文件\"><a href=\"#5-2-运行打包后的-JAR-文件\" class=\"headerlink\" title=\"5.2 运行打包后的 JAR 文件\"></a>5.2 运行打包后的 JAR 文件</h2><p>你可以通过命令行运行打包后的 JAR 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar target/springboot-demo-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"6-总结\"><a href=\"#6-总结\" class=\"headerlink\" title=\"6. 总结\"></a>6. 总结</h1><p>通过本文，我们学习了如何从头开始搭建一个 Spring Boot 项目。我们使用了 Spring Initializr 创建项目模板，编写了简单的<br><code>Controller</code>，并在本地运行了 Spring Boot 应用。此外，我们还学习了如何打包项目并部署到服务器上。</p>\n<p>Spring Boot 的强大之处在于它能让开发者专注于业务逻辑，而不需要过多关注复杂的配置。希望通过这篇文章，你能够顺利入门 Spring<br>Boot 开发，并开始构建自己的项目。</p>\n<p>如果你有任何问题或建议，欢迎在评论区留言，或者通过社交平台与我交流。</p>\n","feature":true,"text":"本文详细介绍了如何从零开始搭建一个 Spring Boot 项目，包括环境配置、创建项目、编写代码和运行项目等步骤。...","permalink":"/post/how-to-setup-a-spring-boot-project","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"后端开发","slug":"后端开发","count":14,"path":"api/categories/后端开发.json"},{"name":"Spring Boot","slug":"后端开发/Spring-Boot","count":1,"path":"api/categories/后端开发/Spring-Boot.json"}],"tags":[{"name":"Java 开发","slug":"Java-开发","count":3,"path":"api/tags/Java-开发.json"},{"name":"构建工具","slug":"构建工具","count":2,"path":"api/tags/构建工具.json"},{"name":"Spring Boot","slug":"Spring-Boot","count":11,"path":"api/tags/Spring-Boot.json"},{"name":"项目搭建","slug":"项目搭建","count":1,"path":"api/tags/项目搭建.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BC%95%E8%A8%80\"><span class=\"toc-text\">引言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\"><span class=\"toc-text\">1. 环境准备</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-%E5%AE%89%E8%A3%85-JDK\"><span class=\"toc-text\">1.1 安装 JDK</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-%E5%AE%89%E8%A3%85-Maven\"><span class=\"toc-text\">1.2 安装 Maven</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-3-%E5%AE%89%E8%A3%85-IDE\"><span class=\"toc-text\">1.3 安装 IDE</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E5%88%9B%E5%BB%BA-Spring-Boot-%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">2. 创建 Spring Boot 项目</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E4%BD%BF%E7%94%A8-Spring-Initializr-%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">2.1 使用 Spring Initializr 创建项目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E5%AF%BC%E5%85%A5%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">2.2 导入项目</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E7%BC%96%E5%86%99%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">3. 编写代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E5%88%9B%E5%BB%BA-Controller\"><span class=\"toc-text\">3.1 创建 Controller</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-%E9%85%8D%E7%BD%AE%E7%B1%BB\"><span class=\"toc-text\">3.2 配置类</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E8%BF%90%E8%A1%8C%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">4. 运行项目</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-%E4%BD%BF%E7%94%A8-IDE-%E8%BF%90%E8%A1%8C\"><span class=\"toc-text\">4.1 使用 IDE 运行</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2-%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BF%90%E8%A1%8C\"><span class=\"toc-text\">4.2 使用命令行运行</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-3-%E8%AE%BF%E9%97%AE%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">4.3 访问项目</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E5%92%8C%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">5. 项目打包和部署</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-1-%E6%89%93%E5%8C%85%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">5.1 打包项目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-2-%E8%BF%90%E8%A1%8C%E6%89%93%E5%8C%85%E5%90%8E%E7%9A%84-JAR-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">5.2 运行打包后的 JAR 文件</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">6. 总结</span></a></li></ol>","author":{"name":"广","slug":"blog-author","avatar":"https://sky-take-out-agaichichaofen.oss-cn-wuhan-lr.aliyuncs.com/qq%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"啊广的读书交流自习室","socials":{"github":"https://github.com/AGAiChiChaoFen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://www.weibo.com/u/5348126242","zhihu":"https://www.zhihu.com/people/wei-xin-yong-hu-92-31-83-82","csdn":"https://blog.csdn.net/m0_74151385?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/501025927?spm_id_from=333.1007.0.0"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"如何使用 Spring Cloud Alibaba 搭建 Spring Cloud 项目","uid":"e80c035b430b9e13f522357568773bcc","slug":"how-to-setup-spring-cloud-using-spring-cloud-alibaba","date":"2024-02-01T16:00:00.000Z","updated":"2024-02-01T16:00:00.000Z","comments":true,"path":"api/articles/how-to-setup-spring-cloud-using-spring-cloud-alibaba.json","keywords":null,"cover":"https://example.com/cover-images/spring-cloud-alibaba.png","text":"本文将详细介绍如何使用 Spring Cloud Alibaba 搭建一个分布式微服务架构，涵盖了服务注册与发现、配置管理、负载均衡、服务网关等常见功能。...","permalink":"/post/how-to-setup-spring-cloud-using-spring-cloud-alibaba","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"后端开发","slug":"后端开发","count":14,"path":"api/categories/后端开发.json"},{"name":"Spring Cloud","slug":"后端开发/Spring-Cloud","count":1,"path":"api/categories/后端开发/Spring-Cloud.json"},{"name":"微服务","slug":"后端开发/Spring-Cloud/微服务","count":1,"path":"api/categories/后端开发/Spring-Cloud/微服务.json"}],"tags":[{"name":"负载均衡","slug":"负载均衡","count":2,"path":"api/tags/负载均衡.json"},{"name":"Spring Cloud","slug":"Spring-Cloud","count":1,"path":"api/tags/Spring-Cloud.json"},{"name":"Spring Cloud Alibaba","slug":"Spring-Cloud-Alibaba","count":1,"path":"api/tags/Spring-Cloud-Alibaba.json"},{"name":"微服务","slug":"微服务","count":1,"path":"api/tags/微服务.json"},{"name":"服务注册与发现","slug":"服务注册与发现","count":1,"path":"api/tags/服务注册与发现.json"},{"name":"Nacos","slug":"Nacos","count":1,"path":"api/tags/Nacos.json"}],"author":{"name":"广","slug":"blog-author","avatar":"https://sky-take-out-agaichichaofen.oss-cn-wuhan-lr.aliyuncs.com/qq%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"啊广的读书交流自习室","socials":{"github":"https://github.com/AGAiChiChaoFen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://www.weibo.com/u/5348126242","zhihu":"https://www.zhihu.com/people/wei-xin-yong-hu-92-31-83-82","csdn":"https://blog.csdn.net/m0_74151385?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/501025927?spm_id_from=333.1007.0.0"}}}},"feature":true},"next_post":{"title":"深入介绍 Hutool 工具包","uid":"d1931fd71e34753c42f4f6aa2e79ea54","slug":"introduction-to-hutool-java-library","date":"2024-02-01T16:00:00.000Z","updated":"2024-02-01T16:00:00.000Z","comments":true,"path":"api/articles/introduction-to-hutool-java-library.json","keywords":null,"cover":"https://example.com/cover-images/hutool-library.png","text":"本文详细介绍了 Hutool 工具包，探讨其常用功能及优势，包括其在项目中的实际应用，帮助开发者提高工作效率。...","permalink":"/post/introduction-to-hutool-java-library","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"Java","slug":"Java","count":5,"path":"api/categories/Java.json"},{"name":"工具包","slug":"Java/工具包","count":1,"path":"api/categories/Java/工具包.json"}],"tags":[{"name":"Hutool","slug":"Hutool","count":1,"path":"api/tags/Hutool.json"},{"name":"Java工具包","slug":"Java工具包","count":1,"path":"api/tags/Java工具包.json"},{"name":"开发效率","slug":"开发效率","count":2,"path":"api/tags/开发效率.json"},{"name":"常用工具","slug":"常用工具","count":1,"path":"api/tags/常用工具.json"}],"author":{"name":"广","slug":"blog-author","avatar":"https://sky-take-out-agaichichaofen.oss-cn-wuhan-lr.aliyuncs.com/qq%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"啊广的读书交流自习室","socials":{"github":"https://github.com/AGAiChiChaoFen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://www.weibo.com/u/5348126242","zhihu":"https://www.zhihu.com/people/wei-xin-yong-hu-92-31-83-82","csdn":"https://blog.csdn.net/m0_74151385?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/501025927?spm_id_from=333.1007.0.0"}}}},"feature":true}}