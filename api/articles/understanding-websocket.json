{"title":"深入理解 WebSocket 协议及其应用","uid":"bc86d0d7202390963a7b7815ca1de205","slug":"understanding-websocket","date":"2024-02-01T16:00:00.000Z","updated":"2024-02-01T16:00:00.000Z","comments":true,"path":"api/articles/understanding-websocket.json","keywords":null,"cover":"https://example.com/cover-images/websocket.png","content":"<h1 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h1><p>随着互联网技术的发展，实时通信在很多应用场景中变得越来越重要。传统的 HTTP 请求-响应机制在实时性方面有一定的局限性，尤其是在高并发和低延迟的要求下。WebSocket<br>协议作为一种基于 TCP 的全双工通信协议，解决了这一问题。本文将深入探讨 WebSocket 协议的基本概念、工作原理以及如何在实际开发中使用<br>WebSocket 实现高效的实时通信。</p>\n<h1 id=\"1-什么是-WebSocket？\"><a href=\"#1-什么是-WebSocket？\" class=\"headerlink\" title=\"1. 什么是 WebSocket？\"></a>1. 什么是 WebSocket？</h1><p>WebSocket 是 HTML5 提出的一个协议，它提供了浏览器和服务器之间全双工通信的能力。与传统的 HTTP 协议不同，WebSocket<br>允许客户端和服务器之间建立持久连接，在此连接上双方可以进行双向通信，而无需每次发送请求。</p>\n<h2 id=\"1-1-WebSocket-协议的特点\"><a href=\"#1-1-WebSocket-协议的特点\" class=\"headerlink\" title=\"1.1 WebSocket 协议的特点\"></a>1.1 WebSocket 协议的特点</h2><ul>\n<li><strong>全双工通信</strong>：WebSocket 支持双向通信，客户端和服务器可以随时相互发送消息，避免了 HTTP 请求的频繁建立和断开。</li>\n<li><strong>低延迟</strong>：WebSocket 一旦连接建立，就可以直接在客户端和服务器之间进行数据交换，具有非常低的延迟。</li>\n<li><strong>持久连接</strong>：WebSocket 协议的连接是持久的，不像 HTTP 那样每次请求都需要重新建立连接，减少了大量的网络开销。</li>\n<li><strong>基于 TCP</strong>：WebSocket 基于 TCP 协议，保证了数据的可靠性和传输的顺序。</li>\n</ul>\n<h1 id=\"2-WebSocket-的工作原理\"><a href=\"#2-WebSocket-的工作原理\" class=\"headerlink\" title=\"2. WebSocket 的工作原理\"></a>2. WebSocket 的工作原理</h1><p>WebSocket 工作原理的关键是通过 HTTP 协议进行初始的握手过程，之后建立起一个持久的 WebSocket 连接。</p>\n<h2 id=\"2-1-握手过程\"><a href=\"#2-1-握手过程\" class=\"headerlink\" title=\"2.1 握手过程\"></a>2.1 握手过程</h2><ol>\n<li><p><strong>客户端请求</strong>：客户端通过 HTTP 协议向服务器发送一个包含 <code>Upgrade: websocket</code> 头部的请求，告知服务器自己希望建立<br>WebSocket 连接。</p>\n <figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/chat</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>example.com</span><br><span class=\"line\"><span class=\"attribute\">Upgrade</span><span class=\"punctuation\">: </span>websocket</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>Upgrade</span><br><span class=\"line\"><span class=\"attribute\">Sec-WebSocket-Key</span><span class=\"punctuation\">: </span>dGhlIHNhbXBsZSBub25jZQ==</span><br><span class=\"line\"><span class=\"attribute\">Sec-WebSocket-Version</span><span class=\"punctuation\">: </span>13</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>服务器响应</strong>：服务器收到请求后，如果支持 WebSocket 协议，就会返回一个包含 <code>101 Switching Protocols</code> 状态码的响应，并且在响应头中包括一个<br><code>Sec-WebSocket-Accept</code> 值，这个值是通过客户端提供的 <code>Sec-WebSocket-Key</code> 计算得出的。</p>\n <figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">HTTP/1.1</span> <span class=\"number\">101</span> Switching Protocols</span><br><span class=\"line\"><span class=\"attribute\">Upgrade</span><span class=\"punctuation\">: </span>websocket</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>Upgrade</span><br><span class=\"line\"><span class=\"attribute\">Sec-WebSocket-Accept</span><span class=\"punctuation\">: </span>dGhlIHNhbXBsZSBub25jZQ==</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>建立连接</strong>：一旦握手成功，客户端和服务器之间就建立了 WebSocket 连接，双方可以开始实时双向数据传输。</p>\n</li>\n</ol>\n<h2 id=\"2-2-数据传输\"><a href=\"#2-2-数据传输\" class=\"headerlink\" title=\"2.2 数据传输\"></a>2.2 数据传输</h2><p>一旦 WebSocket 连接建立，数据将以帧的形式在客户端和服务器之间传输。WebSocket 数据帧的结构如下：</p>\n<ul>\n<li><strong>帧头</strong>：用于标识消息的类型、长度等信息。</li>\n<li><strong>负载数据</strong>：即实际传输的数据内容。</li>\n</ul>\n<p>WebSocket 支持文本消息和二进制消息。文本消息通常使用 UTF-8 编码，二进制消息可以是任意二进制数据（如图片、视频等）。</p>\n<h1 id=\"3-WebSocket-在应用中的使用\"><a href=\"#3-WebSocket-在应用中的使用\" class=\"headerlink\" title=\"3. WebSocket 在应用中的使用\"></a>3. WebSocket 在应用中的使用</h1><p>WebSocket 作为一种高效的实时通信协议，广泛应用于即时通讯、在线游戏、股票实时行情、物联网（IoT）等领域。以下是 WebSocket<br>在开发中的一些常见应用场景。</p>\n<h2 id=\"3-1-实时聊天应用\"><a href=\"#3-1-实时聊天应用\" class=\"headerlink\" title=\"3.1 实时聊天应用\"></a>3.1 实时聊天应用</h2><p>在即时通讯应用中，WebSocket 可以让用户之间实现实时的消息传递。用户发送一条消息时，服务器立即将该消息推送到所有在线用户，保证消息的即时性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 客户端 JavaScript 代码</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> socket = <span class=\"keyword\">new</span> <span class=\"title class_\">WebSocket</span>(<span class=\"string\">&#x27;ws://localhost:8080&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">socket.<span class=\"property\">onopen</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;WebSocket connection established&#x27;</span>);</span><br><span class=\"line\">    socket.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Hello, server!&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">socket.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Received message:&#x27;</span>, event.<span class=\"property\">data</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 关闭连接</span></span><br><span class=\"line\">socket.<span class=\"title function_\">close</span>();</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 服务器端 Node.js 代码（使用 ws 库）</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">WebSocket</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;ws&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> wss = <span class=\"keyword\">new</span> <span class=\"title class_\">WebSocket</span>.<span class=\"title class_\">Server</span>(&#123;<span class=\"attr\">port</span>: <span class=\"number\">8080</span>&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">wss.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;connection&#x27;</span>, <span class=\"function\">(<span class=\"params\">ws</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;A client connected&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    ws.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;message&#x27;</span>, <span class=\"function\">(<span class=\"params\">message</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Received:&#x27;</span>, message);</span><br><span class=\"line\">        ws.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Hello, client!&#x27;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-2-在线游戏\"><a href=\"#3-2-在线游戏\" class=\"headerlink\" title=\"3.2 在线游戏\"></a>3.2 在线游戏</h2><p>在多人在线游戏中，WebSocket 用于实现游戏状态的实时同步。例如，玩家的操作和游戏世界的状态会通过 WebSocket<br>实时传输，确保所有玩家看到的是同样的游戏场景。</p>\n<h2 id=\"3-3-股票实时行情\"><a href=\"#3-3-股票实时行情\" class=\"headerlink\" title=\"3.3 股票实时行情\"></a>3.3 股票实时行情</h2><p>股票交易平台需要实时展示股票的价格变动。通过 WebSocket，平台可以在每次股票价格更新时，实时推送更新的数据给所有在线用户，而不需要频繁轮询服务器。</p>\n<h2 id=\"3-4-物联网（IoT）\"><a href=\"#3-4-物联网（IoT）\" class=\"headerlink\" title=\"3.4 物联网（IoT）\"></a>3.4 物联网（IoT）</h2><p>物联网设备通常需要实时传输数据，如传感器数据、监控摄像头视频流等。WebSocket 提供了一个稳定且低延迟的连接方式，适合用于物联网应用的数据传输。</p>\n<h1 id=\"4-WebSocket-在-Node-js-中的实现\"><a href=\"#4-WebSocket-在-Node-js-中的实现\" class=\"headerlink\" title=\"4. WebSocket 在 Node.js 中的实现\"></a>4. WebSocket 在 Node.js 中的实现</h1><p>Node.js 提供了对 WebSocket 协议的原生支持，通过 <code>ws</code> 库可以方便地创建 WebSocket 服务器。</p>\n<h2 id=\"4-1-安装-ws-库\"><a href=\"#4-1-安装-ws-库\" class=\"headerlink\" title=\"4.1 安装 ws 库\"></a>4.1 安装 <code>ws</code> 库</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install ws</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-2-创建-WebSocket-服务器\"><a href=\"#4-2-创建-WebSocket-服务器\" class=\"headerlink\" title=\"4.2 创建 WebSocket 服务器\"></a>4.2 创建 WebSocket 服务器</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">WebSocket</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;ws&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> wss = <span class=\"keyword\">new</span> <span class=\"title class_\">WebSocket</span>.<span class=\"title class_\">Server</span>(&#123;<span class=\"attr\">port</span>: <span class=\"number\">8080</span>&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">wss.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;connection&#x27;</span>, <span class=\"function\">(<span class=\"params\">ws</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;New client connected&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    ws.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;message&#x27;</span>, <span class=\"function\">(<span class=\"params\">message</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Received:&#x27;</span>, message);</span><br><span class=\"line\">        ws.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Message received&#x27;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    ws.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;close&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Client disconnected&#x27;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-3-客户端连接\"><a href=\"#4-3-客户端连接\" class=\"headerlink\" title=\"4.3 客户端连接\"></a>4.3 客户端连接</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> socket = <span class=\"keyword\">new</span> <span class=\"title class_\">WebSocket</span>(<span class=\"string\">&#x27;ws://localhost:8080&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">socket.<span class=\"property\">onopen</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Connected to server&#x27;</span>);</span><br><span class=\"line\">    socket.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Hello Server!&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">socket.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Received:&#x27;</span>, event.<span class=\"property\">data</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"5-总结\"><a href=\"#5-总结\" class=\"headerlink\" title=\"5. 总结\"></a>5. 总结</h1><p>WebSocket 协议为实时通信应用提供了一种高效、可靠的解决方案。它通过建立持久连接，支持客户端和服务器之间的双向通信，极大地减少了传统<br>HTTP 协议的开销，并且能够满足实时性要求。无论是在即时聊天、在线游戏，还是股票实时行情、物联网应用中，WebSocket<br>都发挥着重要作用。在开发过程中，理解 WebSocket 的工作原理及其应用场景，对于构建高效的实时通信系统至关重要。</p>\n","feature":true,"text":"本文将详细介绍 WebSocket 协议的基本概念、工作原理及应用场景，帮助开发者掌握如何在项目中使用 WebSocket 实现高效的实时通信。...","permalink":"/post/understanding-websocket","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"后端开发","slug":"后端开发","count":14,"path":"api/categories/后端开发.json"},{"name":"实时通信","slug":"后端开发/实时通信","count":2,"path":"api/categories/后端开发/实时通信.json"}],"tags":[{"name":"WebSocket","slug":"WebSocket","count":3,"path":"api/tags/WebSocket.json"},{"name":"实时通信","slug":"实时通信","count":3,"path":"api/tags/实时通信.json"},{"name":"网络协议","slug":"网络协议","count":2,"path":"api/tags/网络协议.json"},{"name":"前后端通信","slug":"前后端通信","count":1,"path":"api/tags/前后端通信.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BC%95%E8%A8%80\"><span class=\"toc-text\">引言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E4%BB%80%E4%B9%88%E6%98%AF-WebSocket%EF%BC%9F\"><span class=\"toc-text\">1. 什么是 WebSocket？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-WebSocket-%E5%8D%8F%E8%AE%AE%E7%9A%84%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">1.1 WebSocket 协议的特点</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-WebSocket-%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">2. WebSocket 的工作原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E6%8F%A1%E6%89%8B%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">2.1 握手过程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93\"><span class=\"toc-text\">2.2 数据传输</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-WebSocket-%E5%9C%A8%E5%BA%94%E7%94%A8%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">3. WebSocket 在应用中的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E5%AE%9E%E6%97%B6%E8%81%8A%E5%A4%A9%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">3.1 实时聊天应用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-%E5%9C%A8%E7%BA%BF%E6%B8%B8%E6%88%8F\"><span class=\"toc-text\">3.2 在线游戏</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3-%E8%82%A1%E7%A5%A8%E5%AE%9E%E6%97%B6%E8%A1%8C%E6%83%85\"><span class=\"toc-text\">3.3 股票实时行情</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-4-%E7%89%A9%E8%81%94%E7%BD%91%EF%BC%88IoT%EF%BC%89\"><span class=\"toc-text\">3.4 物联网（IoT）</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-WebSocket-%E5%9C%A8-Node-js-%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">4. WebSocket 在 Node.js 中的实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-%E5%AE%89%E8%A3%85-ws-%E5%BA%93\"><span class=\"toc-text\">4.1 安装 ws 库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2-%E5%88%9B%E5%BB%BA-WebSocket-%E6%9C%8D%E5%8A%A1%E5%99%A8\"><span class=\"toc-text\">4.2 创建 WebSocket 服务器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-3-%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">4.3 客户端连接</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">5. 总结</span></a></li></ol>","author":{"name":"广","slug":"blog-author","avatar":"https://sky-take-out-agaichichaofen.oss-cn-wuhan-lr.aliyuncs.com/qq%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"啊广的读书交流自习室","socials":{"github":"https://github.com/AGAiChiChaoFen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://www.weibo.com/u/5348126242","zhihu":"https://www.zhihu.com/people/wei-xin-yong-hu-92-31-83-82","csdn":"https://blog.csdn.net/m0_74151385?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/501025927?spm_id_from=333.1007.0.0"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"理解 Java 中的方法引用","uid":"785bdfa89efa0a4fc0a5925a03bec7da","slug":"understanding-method-references-in-java","date":"2024-02-01T16:00:00.000Z","updated":"2024-02-01T16:00:00.000Z","comments":true,"path":"api/articles/understanding-method-references-in-java.json","keywords":null,"cover":"https://example.com/cover-images/method-references-java.png","text":"本文深入讲解了 Java 中的方法引用的概念、语法以及使用场景，并通过实例说明了如何在日常开发中充分利用方法引用来简化代码。...","permalink":"/post/understanding-method-references-in-java","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"Java","slug":"Java","count":5,"path":"api/categories/Java.json"},{"name":"编程技巧","slug":"Java/编程技巧","count":1,"path":"api/categories/Java/编程技巧.json"}],"tags":[{"name":"Java","slug":"Java","count":6,"path":"api/tags/Java.json"},{"name":"函数式编程","slug":"函数式编程","count":2,"path":"api/tags/函数式编程.json"},{"name":"方法引用","slug":"方法引用","count":1,"path":"api/tags/方法引用.json"},{"name":"Lambda 表达式","slug":"Lambda-表达式","count":1,"path":"api/tags/Lambda-表达式.json"},{"name":"编程技巧","slug":"编程技巧","count":1,"path":"api/tags/编程技巧.json"}],"author":{"name":"广","slug":"blog-author","avatar":"https://sky-take-out-agaichichaofen.oss-cn-wuhan-lr.aliyuncs.com/qq%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"啊广的读书交流自习室","socials":{"github":"https://github.com/AGAiChiChaoFen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://www.weibo.com/u/5348126242","zhihu":"https://www.zhihu.com/people/wei-xin-yong-hu-92-31-83-82","csdn":"https://blog.csdn.net/m0_74151385?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/501025927?spm_id_from=333.1007.0.0"}}}},"feature":true},"next_post":{"title":"深入了解域名与 DNS 解析","uid":"8a1250f1005d9e4eb101ffb4ef50588b","slug":"understanding-domain-names-and-dns-resolution","date":"2024-02-01T16:00:00.000Z","updated":"2024-02-01T16:00:00.000Z","comments":true,"path":"api/articles/understanding-domain-names-and-dns-resolution.json","keywords":null,"cover":"https://example.com/cover-images/dns-resolution.png","text":"本文深入介绍了域名的基本概念、DNS（域名系统）的工作原理，以及如何进行域名解析，帮助开发者和网络工程师更好地理解 DNS 在互联网中的作用。...","permalink":"/post/understanding-domain-names-and-dns-resolution","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"网络技术","slug":"网络技术","count":1,"path":"api/categories/网络技术.json"},{"name":"域名解析","slug":"网络技术/域名解析","count":1,"path":"api/categories/网络技术/域名解析.json"},{"name":"DNS","slug":"网络技术/域名解析/DNS","count":1,"path":"api/categories/网络技术/域名解析/DNS.json"}],"tags":[{"name":"网络协议","slug":"网络协议","count":2,"path":"api/tags/网络协议.json"},{"name":"域名","slug":"域名","count":1,"path":"api/tags/域名.json"},{"name":"DNS","slug":"DNS","count":1,"path":"api/tags/DNS.json"},{"name":"域名解析","slug":"域名解析","count":1,"path":"api/tags/域名解析.json"}],"author":{"name":"广","slug":"blog-author","avatar":"https://sky-take-out-agaichichaofen.oss-cn-wuhan-lr.aliyuncs.com/qq%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"啊广的读书交流自习室","socials":{"github":"https://github.com/AGAiChiChaoFen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://www.weibo.com/u/5348126242","zhihu":"https://www.zhihu.com/people/wei-xin-yong-hu-92-31-83-82","csdn":"https://blog.csdn.net/m0_74151385?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/501025927?spm_id_from=333.1007.0.0"}}}},"feature":true}}